{"version":3,"sources":["assets/logo.png","assets/icons/spectrum-css-icons-medium.svg","components/base-components/forms/text-input.js","components/base-components/forms/submit-button.js","components/meta-editor.js","components/preview.js","components/base-components/action-button.js","components/content-editor/element-editor-wrapper.js","components/base-components/forms/text-area.js","components/base-components/forms/checkbox.js","components/base-components/forms/select.js","content-types/_helpers.js","content-types/text/editor.js","content-types/text/preview.js","content-types/text/index.js","content-types/header/editor.js","content-types/header/preview.js","content-types/hr/editor.js","content-types/hr/preview.js","content-types/input/preview.js","content-types/input/editor.js","content-types/text-area/preview.js","content-types/text-area/editor.js","content-types/checkbox/preview.js","content-types/checkbox/editor.js","content-types/slider/preview.js","content-types/slider/editor.js","content-types/select/preview.js","content-types/select/options-editor.js","content-types/select/editor.js","content-types/_all.js","content-types/checkbox/index.js","content-types/header/index.js","content-types/hr/index.js","content-types/select/index.js","content-types/slider/index.js","content-types/text-area/index.js","content-types/input/index.js","components/content-editor/element-adder.js","components/content-editor/content-editor.js","generate-code.js","components/code-dialog.js","App.js","serviceWorker.ts","assets/icons/loadIcons.js","index.js"],"names":["module","exports","__webpack_require__","p","TextInput","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","evt","setState","value","target","onChange","state","react_default","a","createElement","className","htmlFor","name","label","id","type","React","Component","SubmitButton","MetaEditor","handleSubmit","preventDefault","onShowDialog","updateValue","newState","JSON","parse","stringify","createInput","text_input","title","okButtonText","cancelButtonText","src","logo","alt","onSubmit","Preview","width","meta","contents","map","content","preview","element","key","uniqueId","ActionButton","onClick","disabled","children","EditorWrapper","actionButton","enabled","onMoveUp","first","onMoveDown","last","onDelete","TextArea","Checkbox","checked","focusable","aria-hidden","xlinkHref","Select","options","option","arguments","length","undefined","htmlAttributes","createTextArea","text_area","createCheckbox","forms_checkbox","createSelect","forms_select","editor","newProps","react","content_types_text","code","Date","now","header_editor","header_preview","hr_editor","hr_preview","input_preview","placeholder","input_editor","text_area_preview","text_area_editor","checkbox_preview","checkbox_editor","slider_preview","widthPercent","min","max","role","aria-readonly","aria-labelledby","unit","style","left","slider_editor","handleHTMLAttributesChange","select_preview","OptionsEditor","handleOptionChange","index","propName","newOptions","slice","splice","handleDelete","concat","select_editor","_all","required","text","ElementAdder","types","onAdd","ContentEditor","newContents","handleMoveUp","handleMoveDown","handleAdd","_this2","upperCamelize","str","replace","match","toUpperCase","CodeDialog","contentString","contentProps","hasOwnProperty","join","beautify","generateCode","fileName","toLowerCase","open","href","encodeURIComponent","download","onClose","App","console","log","trim","showCodeDialogOpen","aria-roledescription","meta_editor","content_editor_ContentEditor","Boolean","window","location","hostname","handleError","string","error","Error","toString","loadIcons","svgURL","callback","req","XMLHttpRequest","addEventListener","status","svg","parser","DOMParser","parseFromString","responseText","firstChild","err","tagName","display","setAttribute","document","head","insertBefore","bind","send","icons","body","appendChild","ReactDOM","render","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.25e3b8e9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.18a5bc60.png\";","module.exports = __webpack_public_path__ + \"static/media/spectrum-css-icons-medium.9e388587.svg\";","import React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nclass TextInput extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = ({\n            value: props.value || ''\n        });\n    }\n\n    handleChange = (evt) => {\n        this.setState({\n            value: evt.target.value\n        });\n\n        if (this.props.onChange)\n            this.props.onChange(evt.target.value);\n    };\n\n    render() {\n        return (\n            <div className=\"spectrum-Form-item\">\n                <label htmlFor={this.props.name} className=\"spectrum-FieldLabel\">{this.props.label}:</label>\n                <label id={this.props.name} >\n                    <input\n                        type={this.props.type || 'text'}\n                        className=\"spectrum-Textfield\"\n                        name={this.props.name}\n                        id={this.props.name}\n                        value={this.state.value}\n                        onChange={this.handleChange}\n                    />\n                </label>\n            </div>\n        );\n    }\n}\n\n\nTextInput.propTypes = {\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    name: PropTypes.string,\n    label: PropTypes.string,\n    type: PropTypes.oneOf(['text', 'number', 'password']),\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default TextInput;\n","import React from \"react\";\nimport * as PropTypes from 'prop-types';\n\nexport default function SubmitButton(props) {\n    return (\n        <button type=\"submit\" className=\"spectrum-Button spectrum-Button--cta\">\n            <span className=\"spectrum-Button-label\">{props.label}</span>\n        </button>\n    );\n}\n\nSubmitButton.propTypes = {\n    label: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport TextInput from \"./base-components/forms/text-input\";\nimport SubmitButton from \"./base-components/forms/submit-button\";\nimport logo from '../assets/logo.png'; // Tell Webpack this JS file uses this image\nimport * as PropTypes from 'prop-types';\n\n\nclass MetaEditor extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            id: 'dialog',\n            title: 'My dialog',\n            okButtonText: 'Ok',\n            cancelButtonText: 'Cancel'\n        };\n\n        this.props.onChange(this.state);\n    }\n\n    handleSubmit = (evt) => {\n        evt.preventDefault();\n        this.props.onShowDialog();\n    };\n\n    updateValue = (name, value) => {\n        const newState = JSON.parse(JSON.stringify(this.state));\n        newState[name] = value;\n        this.setState(newState);\n\n        if (this.props.onChange) {\n            this.props.onChange(newState);\n        }\n    };\n\n    createInput = (id, label) => {\n        return (\n            <TextInput\n                name={'dialog-' + id}\n                label={label}\n                value={this.state[id]}\n                onChange={(value) => this.updateValue(id, value)}\n            />\n        )\n    };\n\n    render() {\n        return (\n            <aside>\n                <img src={logo} alt=\"xd-dialog-helper logo\"/>\n                <h1>xd-dialog-helper Editor v1.0</h1>\n                <form onSubmit={this.handleSubmit} className=\"spectrum-Form\">\n                    {this.createInput('id', 'Dialog id')}\n                    {this.createInput('title', 'Dialog title')}\n                    {this.createInput('okButtonText', 'Ok button text')}\n                    {this.createInput('cancelButtonText', 'Cancel button text')}\n\n                    <SubmitButton label=\"Generate code\" />\n                </form>\n            </aside>\n        );\n    }\n}\n\nMetaEditor.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    onShowDialog: PropTypes.func.isRequired\n};\n\nexport default MetaEditor;\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport default function Preview(props) {\n    return (\n        <main>\n            <div width=\"360\" className=\"spectrum-Dialog spectrum-Dialog is-open cssdocs-Dialog\">\n                <h1 className=\"spectrum-Dialog-title\">\n                    {props.meta.title}\n                </h1>\n                <div className=\"spectrum-Dialog-content spectrum-Body\">\n                    {props.contents.map(content => {\n                        return (<content.preview element={content} key={content.uniqueId}/>)\n                    })}\n                </div>\n                <div className=\"spectrum-Dialog-footer\">\n                    <button className=\"spectrum-Button spectrum-Button--cta\">\n                        {props.meta.okButtonText}\n                    </button>\n                    <button className=\"spectrum-Button spectrum-Button--secondary\">\n                        {props.meta.cancelButtonText}\n                    </button>\n                </div>\n            </div>\n        </main>\n    )\n}\n\nPreview.propTypes = {\n    meta: PropTypes.objectOf(PropTypes.string).isRequired,\n    contents: PropTypes.arrayOf(PropTypes.object).isRequired\n};\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\n\nexport default function ActionButton(props) {\n    return (\n        <button type=\"button\" onClick={props.onClick} disabled={props.disabled || false} className=\"spectrum-ActionButton\">\n            <span className=\"spectrum-ActionButton-label\">\n                {props.children}\n            </span>\n        </button>\n    )\n}\n\nActionButton.propTypes = {\n    onClick: PropTypes.func.isRequired,\n    disabled: PropTypes.bool\n};\n","import React from 'react';\nimport ActionButton from '../base-components/action-button';\nimport * as PropTypes from 'prop-types';\n\nexport default function EditorWrapper(props) {\n    const actionButton = (label, enabled, onClick) => {\n        return (\n            <ActionButton disabled={!enabled} onClick={onClick}>\n                {label}\n            </ActionButton>\n        )\n    };\n\n    return (\n        <div className=\"spectrum-Well list-item\">\n            {props.element ? <h4>{props.element.label}</h4> : ''}\n            <div className=\"spectrum-Form\">\n                {props.onMoveUp ? actionButton('Up', !props.first, props.onMoveUp) : ''}\n                {props.onMoveDown ? actionButton('Down', !props.last, props.onMoveDown) : ''}\n                {actionButton('Delete', true, props.onDelete)}\n                {props.children}\n            </div>\n        </div>\n    )\n}\n\nEditorWrapper.propTypes = {\n    first: PropTypes.bool.isRequired,\n    last: PropTypes.bool.isRequired,\n    onMoveUp: PropTypes.func,\n    onMoveDown: PropTypes.func,\n    onDelete: PropTypes.func.isRequired,\n    element: PropTypes.object\n};\n","import React from \"react\";\nimport * as PropTypes from 'prop-types';\n\nclass TextArea extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = ({\n            value: props.value || ''\n        });\n    }\n\n    handleChange = (evt) => {\n        this.setState({\n            value: evt.target.value\n        });\n\n        if (this.props.onChange)\n            this.props.onChange(evt.target.value);\n    };\n\n    render() {\n        return (\n            <div className=\"spectrum-Form-item\">\n                <label htmlFor={this.props.name} className=\"spectrum-FieldLabel\">{this.props.label}:</label>\n                <label id={this.props.name} >\n                    \n                    <textarea className=\"spectrum-Textfield spectrum-Textfield--multiline\" name={this.props.name} id={this.props.name} value={this.state.value} onChange={this.handleChange} />\n                </label>\n            </div>\n        );\n    }\n}\n\nTextArea.propTypes = {\n    value: PropTypes.string,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func.isRequired,\n};\n\nexport default TextArea;\n","import React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nclass Checkbox extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = ({\n            value: props.value || false\n        });\n    }\n\n    handleChange = (evt) => {\n        this.setState({\n            value: evt.target.checked\n        });\n\n        if (this.props.onChange)\n            this.props.onChange(evt.target.checked);\n    };\n\n    render() {\n        return (\n            <div className=\"spectrum-Form-item\">\n                <label id={this.props.name} className=\"spectrum-Checkbox\">\n                    <input\n                        type=\"checkbox\"\n                        className=\"spectrum-Checkbox-input\"\n                        name={this.props.name}\n                        id={this.props.name}\n                        checked={this.state.value}\n                        onChange={this.handleChange}\n                    />\n                    <span className=\"spectrum-Checkbox-box\">\n                        <svg focusable=\"false\" aria-hidden=\"true\"\n                             className=\"spectrum-Icon spectrum-UIIcon-CheckmarkSmall spectrum-Checkbox-checkmark\">\n                            <use\n                                xlinkHref=\"#spectrum-css-icon-CheckmarkSmall\">\n\n                            </use>\n                        </svg>\n                        <svg focusable=\"false\" aria-hidden=\"true\"\n                             className=\"spectrum-Icon spectrum-UIIcon-DashSmall spectrum-Checkbox-partialCheckmark\">\n                            <use\n                                xlinkHref=\"#spectrum-css-icon-DashSmall\">\n                            </use>\n                        </svg>\n                    </span>\n                    <span className=\"spectrum-Checkbox-label\">{this.props.label}</span>\n                </label>\n            </div>\n        );\n    }\n}\n\n\nCheckbox.propTypes = {\n    value: PropTypes.bool,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func.isRequired\n};\n\nexport default Checkbox;\n","import React from \"react\";\nimport * as PropTypes from \"prop-types\";\n\nclass Select extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = ({\n            value: props.value || false\n        });\n    }\n\n    handleChange = (evt) => {\n        this.setState({\n            value: evt.target.value\n        });\n\n        if (this.props.onChange)\n            this.props.onChange(evt.target.value);\n    };\n\n    render() {\n        return (\n            <div className=\"spectrum-Form-item\">\n                <div className=\"width100 selectWrapper\">\n                    <label htmlFor={this.props.name}\n                           className=\"spectrum-FieldLabel\">\n                        {this.props.label}:\n                    </label>\n                    <div className=\"selectWrapper\">\n                        <label>\n                            <select id={this.props.name}\n                                    name={this.props.name}\n                                    onChange={this.handleChange}\n                                    value={this.state.value}\n                                    className=\"spectrum-FieldButton spectrum-Dropdown-trigger\">\n                                {this.props.options.map(option => (\n                                    <option key={option.value} value={option.value}>{option.label}</option>\n                                ))}\n                            </select>\n                        </label>\n                        <svg focusable=\"false\" aria-hidden=\"true\"\n                             className=\"spectrum-Icon spectrum-UIIcon-ChevronDownMedium spectrum-Dropdown-icon\">\n                            <use xlinkHref=\"#spectrum-css-icon-ChevronDownMedium\"/>\n                        </svg>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\nSelect.propTypes = {\n    options: PropTypes.arrayOf(PropTypes.shape({value: PropTypes.string, label: PropTypes.string})),\n    value: PropTypes.string,\n    name: PropTypes.string,\n    label: PropTypes.string,\n    onChange: PropTypes.func.isRequired\n};\n\nexport default Select;\n","import React from 'react';\nimport TextInput from '../components/base-components/forms/text-input';\nimport TextArea from '../components/base-components/forms/text-area';\nimport Checkbox from \"../components/base-components/forms/checkbox\";\nimport Select from \"../components/base-components/forms/select\";\n\n/**\n * Creates a text input\n * @param {object} props Props of the function\n * @param {function(id: string, value: *): void} handleChange The change handler\n * @param {string} id The id of the input (value must be in `props[id]`)\n * @param {string} label The label of the input\n * @param {'text' | 'number' | 'password'} [type='text'] The type of the input\n */\nexport function createInput(props, handleChange, id, label, type = 'text') {\n    return (\n        <TextInput\n            name={props.element.uniqueId + '-' + id}\n            label={label}\n            type={type}\n            value={props.element.props[id] !== undefined ? props.element.props[id] : props.element.props.htmlAttributes[id]}\n            onChange={(value) => handleChange(id, value)}\n        />\n    )\n}\n\n/**\n * Creates a text area\n * @param {object} props Props of the function\n * @param {function(id: string, value: *): void} handleChange The change handler\n * @param {string} id The id of the input (value must be in `props[id]`)\n * @param {string} label The label of the text area\n */\nexport function createTextArea(props, handleChange, id, label) {\n    return (\n        <TextArea\n            name={props.element.uniqueId + '-' + id}\n            label={label}\n            value={props.element.props[id]}\n            onChange={(value) => handleChange(id, value)}\n        />\n    )\n}\n\n\n/**\n * Creates a checkbox\n * @param {object} props Props of the function\n * @param {function(id: string, value: *): void} handleChange The change handler\n * @param {string} id The id of the input (value must be in `props[id]`)\n * @param {string} label The label of the text area\n */\nexport function createCheckbox(props, handleChange, id, label) {\n    return (\n        <Checkbox\n            name={props.element.uniqueId + '-' + id}\n            label={label}\n            value={props.element.props[id]}\n            onChange={(value) => handleChange(id, value)}\n        />\n    )\n}\n\n\n/**\n * Creates a checkbox\n * @param {object} props Props of the function\n * @param {function(id: string, value: *): void} handleChange The change handler\n * @param {string} id The id of the input (value must be in `props[id]`)\n * @param {string} label The label of the text area\n * @param {Array<{value: string, label: string}>} options Available options\n */\nexport function createSelect(props, handleChange, id, label, options) {\n    return (\n        <Select\n            name={props.element.uniqueId + '-' + id}\n            label={label}\n            value={props.element.props[id]}\n            onChange={(value) => handleChange(id, value)}\n            options={options}\n        />\n    )\n}\n","import React, {Fragment} from \"react\";\nimport {createInput, createTextArea} from \"../_helpers\";\n\nexport default function (props) {\n    const handleChange = (name, value) => {\n        const newProps = JSON.parse(JSON.stringify(props.element.props));\n        newProps[name] = value;\n        props.onChange(newProps);\n    };\n\n    return (\n        <Fragment>\n            {createInput(props, handleChange, 'id', 'Element id')}\n            {createTextArea(props, handleChange, 'label', 'Label')}\n        </Fragment>\n    );\n}\n","import React from \"react\";\n\nexport default function (props) {\n    return (\n        <div className=\"contentElement\">\n            <p className=\"spectrum-Body width100\">{props.element.props.label}</p>\n        </div>\n    )\n}\n","import editor from \"./editor\";\nimport preview from \"./preview\";\n\nexport default () => ({\n    label: 'Text',\n    code: 'DialogHelper.types.TEXT',\n\n    uniqueId: Date.now(),\n\n    props: {\n        label: 'My text',\n        id: 'text-' + Date.now(),\n    },\n\n    editor,\n    preview,\n})\n","import React, {Fragment} from \"react\";\nimport {createInput} from \"../_helpers\";\n\nexport default function (props) {\n    const handleChange = (name, value) => {\n        const newProps = JSON.parse(JSON.stringify(props.element.props));\n        newProps[name] = value;\n        props.onChange(newProps);\n    };\n\n    return (\n        <Fragment>\n            {createInput(props, handleChange, 'id', 'Element id')}\n            {createInput(props, handleChange, 'label', 'Label')}\n        </Fragment>\n    );\n}\n","import React from \"react\";\n\nexport default function (props) {\n    return (\n        <div className=\"contentElement\">\n            <h2 className=\"spectrum-Heading--subtitle1\">{props.element.props.label}</h2>\n        </div>\n    )\n}\n","import React, {Fragment} from \"react\";\nimport {createInput} from \"../_helpers\";\n\nexport default function (props) {\n    const handleChange = (name, value) => {\n        const newProps = JSON.parse(JSON.stringify(props.element.props));\n        newProps[name] = value;\n        props.onChange(newProps);\n    };\n\n    return (\n        <Fragment>\n            {createInput(props, handleChange, 'id', 'Element id')}\n        </Fragment>\n    );\n}\n","import React from \"react\";\n\nexport default function () {\n    return (\n        <div className=\"contentElement\">\n            <hr className=\"spectrum-Rule spectrum-Rule--medium\" />\n        </div>\n    )\n}\n","import React from \"react\";\n\nexport default function (props) {\n    return (\n        <div className=\"contentElement\">\n            <div className=\"width100\">\n                <label htmlFor={props.element.props.id} className=\"spectrum-FieldLabel\">\n                    {props.element.props.label}\n                </label>\n                <label>\n                    <input\n                        // required={props.element.props.required}\n                        type={props.element.props.htmlAttributes.type}\n                        value={props.element.props.value}\n                        placeholder={props.element.props.label}\n                        name={props.element.props.id}\n                        id={props.element.props.id}\n                        onChange={() => undefined}\n                        className=\"spectrum-Textfield\"/>\n                </label>\n            </div>\n        </div>\n    )\n}\n","import React, {Fragment} from \"react\";\nimport {createCheckbox, createInput, createSelect} from \"../_helpers\";\n\nexport default function (props) {\n    const handleChange = (name, value) => {\n        const newProps = JSON.parse(JSON.stringify(props.element.props));\n        newProps[name] = value;\n        props.onChange(newProps);\n    };\n\n    const handleHTMLAttributesChange = (name, value) => {\n        const newProps = JSON.parse(JSON.stringify(props.element.props));\n        newProps.htmlAttributes[name] = value;\n        props.onChange(newProps);\n    };\n\n    return (\n        <Fragment>\n            {createInput(props, handleChange, 'id', 'Element id')}\n            {createInput(props, handleChange, 'label', 'Label')}\n            {createSelect(props, handleHTMLAttributesChange, 'type', 'Input type', [\n                {value: 'text', label: 'Text'},\n                {value: 'password', label: 'Password'},\n                {value: 'number', label: 'Number'},\n            ])}\n            {createInput(props, handleChange, 'value', 'Initial value', props.element.props.htmlAttributes.type)}\n            {createCheckbox(props, handleChange, 'required', 'Required (validation)')}\n        </Fragment>\n    );\n}\n","import React from \"react\";\n\nexport default function (props) {\n    return (\n        <div className=\"contentElement\">\n            <div className=\"width100\">\n                <label htmlFor={props.element.props.id} className=\"spectrum-FieldLabel\">\n                    {props.element.props.label}\n                </label>\n                <label>\n                    <textarea\n                        // required={props.element.props.required}\n                        value={props.element.props.value}\n                        placeholder={props.element.props.label}\n                        name={props.element.props.id}\n                        id={props.element.props.id}\n                        onChange={() => undefined}\n                        className=\"spectrum-Textfield spectrum-Textfield--multiline\"/>\n                </label>\n            </div>\n        </div>\n    )\n}\n","import React, {Fragment} from \"react\";\nimport {createCheckbox, createInput, createTextArea} from \"../_helpers\";\n\nexport default function (props) {\n    const handleChange = (name, value) => {\n        const newProps = JSON.parse(JSON.stringify(props.element.props));\n        newProps[name] = value;\n        props.onChange(newProps);\n    };\n\n    return (\n        <Fragment>\n            {createInput(props, handleChange, 'id', 'Element id')}\n            {createInput(props, handleChange, 'label', 'Label')}\n            {createTextArea(props, handleChange, 'value', 'Initial value')}\n            {createCheckbox(props, handleChange, 'required', 'Required (validation)')}\n        </Fragment>\n    );\n}\n","import React from \"react\";\n\nexport default function (props) {\n    return (\n        <div className=\"contentElement\">\n            <label className=\"spectrum-Checkbox\">\n                <input type=\"checkbox\" id={props.element.props.name}\n                       checked={props.element.props.value}\n                       onChange={() => undefined}\n                       className=\"spectrum-Checkbox-input\"/>\n                <span\n                    className=\"spectrum-Checkbox-box\">\n                            <svg focusable=\"false\" aria-hidden=\"true\"\n                                 className=\"spectrum-Icon spectrum-UIIcon-CheckmarkSmall spectrum-Checkbox-checkmark\">\n                                <use\n                                    xlinkHref=\"#spectrum-css-icon-CheckmarkSmall\"/>\n                            </svg>\n                            <svg focusable=\"false\"\n                                 aria-hidden=\"true\"\n                                 className=\"spectrum-Icon spectrum-UIIcon-DashSmall spectrum-Checkbox-partialCheckmark\">\n                                <use\n                                    xlinkHref=\"#spectrum-css-icon-DashSmall\"/>\n                            </svg>\n                        </span>\n                <span\n                    className=\"spectrum-Checkbox-label\">{props.element.props.label}\n                        </span>\n            </label>\n        </div>\n    )\n}\n","import React, {Fragment} from \"react\";\nimport {createCheckbox, createInput} from \"../_helpers\";\n\nexport default function (props) {\n    const handleChange = (name, value) => {\n        const newProps = JSON.parse(JSON.stringify(props.element.props));\n        newProps[name] = value;\n        props.onChange(newProps);\n    };\n\n    return (\n        <Fragment>\n            {createInput(props, handleChange, 'id', 'Element id')}\n            {createInput(props, handleChange, 'label', 'Label')}\n            {createCheckbox(props, handleChange, 'value', 'Initially checked')}\n            {createCheckbox(props, handleChange, 'required', 'Required (validation)')}\n        </Fragment>\n    );\n}\n","import React from \"react\";\n\nexport default function (props) {\n    const widthPercent = 100 * (props.element.props.value - props.element.props.htmlAttributes.min) /\n        (props.element.props.htmlAttributes.max - props.element.props.htmlAttributes.min);\n\n    return (\n        <div className=\"contentElement\">\n            <div className=\"spectrum-Slider spectrum-Slider--filled\">\n                <div className=\"spectrum-Slider-labelContainer\">\n                    <label id=\"spectrum-Slider-label-8\"\n                           htmlFor=\"spectrum-Slider-input-8\"\n                           className=\"spectrum-Slider-label\">\n                        {props.element.props.label}\n                    </label>\n                    <div role=\"textbox\"\n                         aria-readonly=\"true\"\n                         aria-labelledby=\"spectrum-Slider-label-8\"\n                         className=\"spectrum-Slider-value\">\n                        {props.element.props.value}{props.element.props.unit}\n                    </div>\n                </div>\n                <div className=\"spectrum-Slider-controls\">\n                    <div className=\"spectrum-Slider-track\" style={{width: widthPercent + '%'}}/>\n                    <div className=\"spectrum-Slider-handle\" style={{left: widthPercent + '%'}}>\n                        <input type=\"range\" min={props.element.props.htmlAttributes.min}\n                               max={props.element.props.htmlAttributes.max}\n                               id=\"spectrum-Slider-input-8\"\n                               className=\"spectrum-Slider-input\"/>\n                    </div>\n                    <div className=\"spectrum-Slider-track\" style={{width: (100 - widthPercent) + '%'}}/>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, {Fragment} from \"react\";\nimport {createInput} from \"../_helpers\";\n\nexport default function (props) {\n    const handleChange = (name, value) => {\n        const newProps = JSON.parse(JSON.stringify(props.element.props));\n        newProps[name] = value;\n        props.onChange(newProps);\n    };\n\n    const handleHTMLAttributesChange = (name, value) => {\n        const newProps = JSON.parse(JSON.stringify(props.element.props));\n        newProps.htmlAttributes[name] = value;\n        props.onChange(newProps);\n    };\n\n    return (\n        <Fragment>\n            {createInput(props, handleChange, 'id', 'Element id')}\n            {createInput(props, handleChange, 'label', 'Label')}\n            {createInput(props, handleHTMLAttributesChange, 'min', 'Minimum value', 'number')}\n            {createInput(props, handleHTMLAttributesChange, 'max', 'Maximum value', 'number')}\n            {createInput(props, handleChange, 'value', 'Initial value', 'number')}\n            {createInput(props, handleChange, 'unit', 'Unit')}\n        </Fragment>\n    );\n}\n","import React from \"react\";\n\nexport default function (props) {\n    return (\n        <div className=\"contentElement\">\n            <div className=\"width100 selectWrapper\">\n                <label htmlFor={props.element.props.id}\n                       className=\"spectrum-FieldLabel\">\n                    {props.element.props.label}\n                </label>\n                <div className=\"selectWrapper\">\n                    <label>\n                        <select id={props.element.props.id}\n                                name={props.element.props.id}\n                                className=\"spectrum-FieldButton spectrum-Dropdown-trigger\"\n                                value={props.element.props.value}\n                                onChange={() => undefined}\n                        >\n                            {props.element.props.options.map(option => (\n                                <option key={option.value} value={option.value}>{option.label}</option>\n                            ))}\n                        </select>\n                    </label>\n                    <svg focusable=\"false\" aria-hidden=\"true\"\n                         className=\"spectrum-Icon spectrum-UIIcon-ChevronDownMedium spectrum-Dropdown-icon\">\n                        <use xlinkHref=\"#spectrum-css-icon-ChevronDownMedium\"/>\n                    </svg>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, {Fragment} from \"react\";\nimport EditorWrapper from \"../../components/content-editor/element-editor-wrapper\";\nimport TextInput from \"../../components/base-components/forms/text-input\";\n\nexport default function OptionsEditor(props) {\n    const handleInsertOption = () => {\n        const newOptions = props.element.props.options.slice().concat([{value: 'value-' + Date.now(), label: 'Label'}]);\n        props.onChange('options', newOptions);\n    };\n\n    const handleDelete = (index) => {\n        const newOptions = props.element.props.options.slice();\n        newOptions.splice(index, 1);\n        props.onChange('options', newOptions);\n    };\n\n    const handleOptionChange = (index, propName, value) => {\n        const newOptions = props.element.props.options.slice();\n        newOptions[index][propName] = value;\n        props.onChange('options', newOptions);\n    };\n\n    return (\n        <Fragment>\n            <h5>Options:</h5>\n            {props.element.props.options.map((option, index) => (\n                <EditorWrapper key={option.value}\n                               first={index === 0}\n                               last={index === props.element.props.options.length - 1}\n                               onDelete={() => handleDelete(index)}>\n                    <TextInput onChange={(value) => handleOptionChange(index, 'value', value)}\n                               value={option.value}\n                               label={\"Value\"}\n                               name={option.value + \"-value\"}/>\n                    <TextInput onChange={(value) => handleOptionChange(index, 'label', value)}\n                               value={option.label}\n                               label={\"Label\"}\n                               name={option.value + \"-label\"}/>\n                </EditorWrapper>\n            ))}\n            <p className=\"spectrum-Link\" onClick={handleInsertOption}>Insert new option...</p>\n        </Fragment>\n    );\n}\n","import React, {Fragment} from \"react\";\nimport {createInput, createSelect} from \"../_helpers\";\nimport OptionsEditor from \"./options-editor\";\n\nexport default function (props) {\n    const handleChange = (name, value) => {\n        const newProps = JSON.parse(JSON.stringify(props.element.props));\n        newProps[name] = value;\n        props.onChange(newProps);\n    };\n\n    return (\n        <Fragment>\n            {createInput(props, handleChange, 'id', 'Element id')}\n            {createInput(props, handleChange, 'label', 'Label')}\n            <OptionsEditor element={props.element} onChange={handleChange} />\n            {createSelect(props, handleChange, 'value', 'Initial value', props.element.props.options)}\n        </Fragment>\n    );\n}\n","import text from \"./text\";\nimport header from \"./header\";\nimport hr from './hr';\nimport text_input from './input';\nimport text_area from './text-area';\nimport checkbox from './checkbox';\nimport slider from './slider';\nimport select from './select';\n\nexport default [\n    checkbox,\n    header,\n    hr,\n    select,\n    slider,\n    text,\n    text_area,\n    text_input,\n];\n","import preview from \"./preview\";\nimport editor from \"./editor\";\n\nexport default () => ({\n    label: 'Checkbox',\n    code: 'DialogHelper.types.CHECKBOX',\n    uniqueId: Date.now(),\n\n    props: {\n        label: 'I accept the terms and conditions',\n        id: 'cb-' + Date.now(),\n        value: false,\n        required: true\n    },\n    editor: editor,\n    preview: preview,\n})\n","import editor from \"./editor\";\nimport preview from \"./preview\";\n\nexport default () => ({\n    label: 'Header',\n    code: 'DialogHelper.types.HEADER',\n\n    uniqueId: Date.now(),\n\n    props: {\n        label: 'Section header',\n        id: 'header-' + Date.now(),\n    },\n\n    editor,\n    preview,\n})\n","import editor from \"./editor\";\nimport preview from \"./preview\";\n\nexport default () => ({\n    label: 'Horizontal Rule',\n    code: 'DialogHelper.types.HR',\n    uniqueId: Date.now(),\n\n    props: {\n        id: 'hr-' + Date.now(),\n    },\n\n    editor,\n    preview,\n})\n","import preview from \"./preview\";\nimport editor from \"./editor\";\n\nexport default () => ({\n    label: 'Select / Dropdown',\n    code: 'DialogHelper.types.SELECT',\n    uniqueId: Date.now(),\n\n    props: {\n        label: 'My text',\n        id: 'select-' + Date.now(),\n        value: 'option1',\n        options: [\n            { value: 'option1', label: 'Option 1' },\n            { value: 'option2', label: 'Option 2' },\n        ]\n    },\n    editor: editor,\n    preview: preview,\n})\n","import preview from \"./preview\";\nimport editor from \"./editor\";\n\nexport default () => ({\n    label: 'Slider',\n    code: 'DialogHelper.types.SLIDER',\n    uniqueId: Date.now(),\n\n    props: {\n        label: 'Padding',\n        id: 'slider-' + Date.now(),\n        value: 15,\n        htmlAttributes: {\n            max: 40,\n            min: 1,\n        },\n        unit: 'px'\n    },\n    editor: editor,\n    preview: preview,\n})\n","import preview from \"./preview\";\nimport editor from \"./editor\";\n\nexport default () => ({\n    label: 'Text Area',\n    code: 'DialogHelper.types.TEXT_AREA',\n    uniqueId: Date.now(),\n\n    props: {\n        label: 'My text',\n        id: 'ta-' + Date.now(),\n        value: '',\n        required: false\n    },\n    editor: editor,\n    preview: preview,\n})\n","import preview from \"./preview\";\nimport editor from \"./editor\";\n\nexport default () => ({\n    label: 'Input',\n    code: 'DialogHelper.types.TEXT_INPUT',\n    uniqueId: Date.now(),\n\n    props: {\n        label: 'My text',\n        id: 'input-' + Date.now(),\n        value: '',\n        required: false,\n        htmlAttributes: {\n            type: 'text'\n        }\n    },\n    editor: editor,\n    preview: preview,\n})\n","import React, { Fragment } from 'react';\nimport types from '../../content-types/_all';\nimport ActionButton from '../base-components/action-button';\nimport * as PropTypes from 'prop-types';\n\nexport default function ElementAdder(props) {\n    return (\n        <Fragment>\n            <h2>Append element:</h2>\n            {types.map(type => {\n                return (\n                    <ActionButton key={type().code} onClick={() => props.onAdd(type())}>{type().label}</ActionButton>\n                )\n            })}\n        </Fragment>\n    )\n}\n\nElementAdder.propTypes = {\n    onAdd: PropTypes.func.isRequired\n};\n","import React from 'react';\nimport EditorWrapper from './element-editor-wrapper';\nimport ElementAdder from './element-adder';\nimport * as PropTypes from 'prop-types';\n\nexport default class ContentEditor extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            contents: this.props.contents\n        }\n    }\n\n    handleChange = (index, newProps) => {\n        const newContents = this.state.contents.slice();\n        newContents[index].props = newProps;\n\n        if (this.props.onChange)\n            this.props.onChange(newContents);\n\n        this.setState({ contents: newContents });\n    };\n\n    handleDelete = (index) => {\n        const newContents = this.state.contents.slice();\n        newContents.splice(index, 1);\n\n        if (this.props.onChange)\n            this.props.onChange(newContents);\n\n        this.setState({ contents: newContents });\n    };\n\n    handleMoveUp = (index) => {\n        const newContents = this.state.contents.slice();\n\n        newContents.splice(index - 1, 0, newContents.splice(index, 1)[0]);\n\n        if (this.props.onChange)\n            this.props.onChange(newContents);\n\n        this.setState({ contents: newContents });\n    };\n\n    handleMoveDown = (index) => {\n        const newContents = this.state.contents.slice();\n\n        newContents.splice(index + 1, 0, newContents.splice(index, 1)[0]);\n\n        if (this.props.onChange)\n            this.props.onChange(newContents);\n\n        this.setState({ contents: newContents })\n    };\n\n    handleAdd = (element) => {\n        const newContents = this.state.contents.slice().concat([element]);\n\n        if (this.props.onChange)\n            this.props.onChange(newContents);\n\n        this.setState({ contents: newContents })\n    };\n\n    render() {\n        return (\n            <aside>\n                {this.state.contents.map((content, index) =>\n                    <EditorWrapper\n                        element={content}\n                        first={index === 0}\n                        last={index === this.state.contents.length - 1}\n                        key={content.uniqueId}\n                        onDelete={() => this.handleDelete(index)}\n                        onMoveUp={() => this.handleMoveUp(index)}\n                        onMoveDown={() => this.handleMoveDown(index)}\n                    >\n                        <content.editor element={content} onChange={(newProps) => this.handleChange(index, newProps)} />\n                    </EditorWrapper>\n                )\n                }\n                <ElementAdder onAdd={this.handleAdd} />\n            </aside>\n        )\n    }\n}\n\nContentEditor.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    contents: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\n","import beautify from 'js-beautify';\n\n/**\n * Generates code for the passed meta- and content information\n * @param meta\n * @param {Array<object>} contents\n * @return {string} The generated, formatted code\n */\nexport default function generateCode(meta, contents) {\n    const contentString = '[' + (contents.map(content => {\n        let contentProps = '{type:' + content.code + ',';\n\n        for (const name in content.props) {\n            if (content.props.hasOwnProperty(name))\n                contentProps += `${name}: ${JSON.stringify(content.props[name])},`\n        }\n\n        contentProps += '}';\n        return contentProps;\n    })).join(',') + ']';\n\n    return beautify(`\nconst DialogHelper = require('xd-dialog-helper');\n\nasync function show${upperCamelize(meta.id)}Dialog() {\n    try {\n        const results = await DialogHelper.showDialog(${JSON.stringify(meta.id )|| ''}, \n        ${JSON.stringify(meta.title )|| ''}, ${contentString}, {\n            okButtonText: ${JSON.stringify(meta.okButtonText)},\n            cancelButtonText: ${JSON.stringify(meta.cancelButtonText)},\n        });\n\n        // Do something with the results here...\n    } catch (e) {\n        // Dialog got canceled\n    }\n}\n\nmodule.exports = show${upperCamelize(meta.id)}Dialog;    \n    `);\n}\n\nfunction upperCamelize(str) {\n    str = str || '';\n\n    return str.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function(match) {\n        if (+match === 0) return \"\"; // or if (/\\s+/.test(match)) for white spaces\n        return match.toUpperCase();\n    });\n}\n","import React from 'react';\nimport * as PropTypes from 'prop-types';\nimport generateCode from \"../generate-code\";\n\nexport default function CodeDialog(props) {\n    const code = generateCode(props.meta, props.contents);\n\n    props.meta.id = props.meta.id || '';\n\n    const fileName = props.meta.id.replace(/(?:^\\w|[A-Z]|\\b\\w|\\s+)/g, function (match) {\n        if (+match === 0) return \"-\"; // or if (/\\s+/.test(match)) for white spaces\n        return match.toLowerCase();\n    }) + '.js';\n\n    return (\n        <dialog id=\"codeDialog\" className={\"spectrum-Dialog spectrum-Dialog--alert\" + (props.open ? \" is-open\" : \"\")}>\n            <header className=\"spectrum-Dialog-header\">\n                <h2 className=\"spectrum-Dialog-title\">The JS code</h2>\n            </header>\n            <main className=\"spectrum-Dialog-content\">\n                <pre><code>{code}</code></pre>\n            </main>\n            <footer className=\"spectrum-Dialog-footer\">\n                <a className=\"spectrum-Button spectrum-Button--cta\"\n                   href={'data:text/plain;charset=utf-8,' + encodeURIComponent(code)}\n                   download={fileName}>\n                    Download {fileName}\n                </a>\n\n                <button\n                    onClick={props.onClose}\n                    className=\"spectrum-Button spectrum-Button--secondary\">\n                    Close\n                </button>\n            </footer>\n        </dialog>\n    )\n}\n\nCodeDialog.propTypes = {\n    meta: PropTypes.objectOf(PropTypes.string).isRequired,\n    contents: PropTypes.arrayOf(PropTypes.object).isRequired,\n    onClose: PropTypes.func.isRequired,\n    open: PropTypes.bool\n};\n","import React from 'react';\nimport './App.scss';\nimport MetaEditor from './components/meta-editor';\nimport Preview from './components/preview';\nimport ContentEditor from './components/content-editor/content-editor';\nimport text from './content-types/text';\nimport CodeDialog from \"./components/code-dialog\";\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        console.log(`\nxd-dialog-helper WYSIWYG editor\n===============================\n\\u00A9 2019 by Pablo Klaschka\nCode hosted at https://github.com/pklaschka/xd-dialog-helper-editor`.trim());\n\n        this.state = {\n            meta: {},\n            contents: [text()],\n            showCodeDialogOpen: false\n        }\n    }\n\n    render() {\n        return (\n            <div id=\"app\" className=\"spectrum spectrum-Typography\" aria-roledescription=\"Main app\">\n                <MetaEditor onShowDialog={() => this.setState({showCodeDialogOpen: true})}\n                            onChange={(meta) => this.setState({meta})}/>\n                <ContentEditor\n                    onChange={contents => this.setState({contents})}\n                    contents={this.state.contents}\n                />\n                <Preview meta={this.state.meta}\n                         contents={this.state.contents}/>\n                <CodeDialog\n                    meta={this.state.meta}\n                    contents={this.state.contents}\n                    onClose={() => this.setState({showCodeDialogOpen: false})}\n                    open={this.state.showCodeDialogOpen}\n                />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","/*\nCopyright 2018 Adobe. All rights reserved.\nThis file is licensed to you under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License. You may obtain a copy\nof the License at http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under\nthe License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR REPRESENTATIONS\nOF ANY KIND, either express or implied. See the License for the specific language\ngoverning permissions and limitations under the License.\n*/\n\n// File changed by Pablo Klaschka\n\n\nfunction handleError(string) {\n    string = 'loadIcons: ' + string;\n    const error = new Error(string);\n\n    console.error(error.toString());\n}\n\nfunction injectSVG(svgURL, callback) {\n    // 200 for web servers, 0 for CEP panels\n    if (this.status !== 200 && this.status !== 0) {\n        handleError('Failed to fetch icons, server returned ' + this.status);\n        return;\n    }\n\n    // Parse the SVG\n    const parser = new DOMParser();\n\n    let svg;\n\n    try {\n        const doc = parser.parseFromString(this.responseText, 'image/svg+xml');\n        svg = doc.firstChild;\n    } catch (err) {\n        handleError('Error parsing SVG: ' + err);\n        return;\n    }\n\n    // Make sure a real SVG was returned\n    if (svg && svg.tagName === 'svg') {\n        // Hide the element\n        svg.style.display = 'none';\n\n        svg.setAttribute('data-url', svgURL);\n\n        // Insert it into the head\n        document.head.insertBefore(svg, null);\n\n        // Pass the SVG to the callback\n        if (typeof callback === 'function') {\n            callback(null, svg);\n        }\n    } else {\n        handleError('Parsed SVG document contained something other than an SVG');\n    }\n}\n\nfunction loadIcons(svgURL, callback) {\n    // Request the SVG sprite\n    const req = new XMLHttpRequest();\n    req.open('GET', svgURL, true);\n    req.addEventListener('load', injectSVG.bind(req, svgURL, callback));\n    req.addEventListener('error', function () {\n        handleError('Request failed');\n    });\n    req.send();\n}\n\nexport default loadIcons;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport loadIcons from './assets/icons/loadIcons';\nimport icons from './assets/icons/spectrum-css-icons-medium.svg';\n\n\nloadIcons(icons, (error, svg) => {\n    document.body.appendChild(svg);\n});\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}